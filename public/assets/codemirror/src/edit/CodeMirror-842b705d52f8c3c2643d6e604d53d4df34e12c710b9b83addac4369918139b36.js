function registerEventHandlers(e){function o(){n.activeTouch&&(i=setTimeout(()=>n.activeTouch=null,1e3),(s=n.activeTouch).end=+new Date)}function t(e){if(1!=e.touches.length)return!1;let o=e.touches[0];return o.radiusX<=1&&o.radiusY<=1}function r(e,o){if(null==o.left)return!0;let t=o.left-e.left,r=o.top-e.top;return t*t+r*r>400}let n=e.display;on(n.scroller,"mousedown",operation(e,onMouseDown)),on(n.scroller,"dblclick",ie&&ie_version<11?operation(e,o=>{if(signalDOMEvent(e,o))return;let t=posFromMouse(e,o);if(!t||clickInGutter(e,o)||eventInWidget(e.display,o))return;e_preventDefault(o);let r=e.findWordAt(t);extendSelection(e.doc,r.anchor,r.head)}):o=>signalDOMEvent(e,o)||e_preventDefault(o)),on(n.scroller,"contextmenu",o=>onContextMenu(e,o)),on(n.input.getField(),"contextmenu",o=>{n.scroller.contains(o.target)||onContextMenu(e,o)});let i,s={end:0};on(n.scroller,"touchstart",o=>{if(!signalDOMEvent(e,o)&&!t(o)&&!clickInGutter(e,o)){n.input.ensurePolled(),clearTimeout(i);let e=+new Date;n.activeTouch={start:e,moved:!1,prev:e-s.end<=300?s:null},1==o.touches.length&&(n.activeTouch.left=o.touches[0].pageX,n.activeTouch.top=o.touches[0].pageY)}}),on(n.scroller,"touchmove",()=>{n.activeTouch&&(n.activeTouch.moved=!0)}),on(n.scroller,"touchend",t=>{let i=n.activeTouch;if(i&&!eventInWidget(n,t)&&null!=i.left&&!i.moved&&new Date-i.start<300){let o,s=e.coordsChar(n.activeTouch,"page");o=!i.prev||r(i,i.prev)?new Range(s,s):!i.prev.prev||r(i,i.prev.prev)?e.findWordAt(s):new Range(Pos(s.line,0),clipPos(e.doc,Pos(s.line+1,0))),e.setSelection(o.anchor,o.head),e.focus(),e_preventDefault(t)}o()}),on(n.scroller,"touchcancel",o),on(n.scroller,"scroll",()=>{n.scroller.clientHeight&&(updateScrollTop(e,n.scroller.scrollTop),setScrollLeft(e,n.scroller.scrollLeft,!0),signal(e,"scroll",e))}),on(n.scroller,"mousewheel",o=>onScrollWheel(e,o)),on(n.scroller,"DOMMouseScroll",o=>onScrollWheel(e,o)),on(n.wrapper,"scroll",()=>n.wrapper.scrollTop=n.wrapper.scrollLeft=0),n.dragFunctions={enter:o=>{signalDOMEvent(e,o)||e_stop(o)},over:o=>{signalDOMEvent(e,o)||(onDragOver(e,o),e_stop(o))},start:o=>onDragStart(e,o),drop:operation(e,onDrop),leave:o=>{signalDOMEvent(e,o)||clearDragCursor(e)}};let l=n.input.getField();on(l,"keyup",o=>onKeyUp.call(e,o)),on(l,"keydown",operation(e,onKeyDown)),on(l,"keypress",operation(e,onKeyPress)),on(l,"focus",o=>onFocus(e,o)),on(l,"blur",o=>onBlur(e,o))}import{Display}from"../display/Display.js";import{onFocus,onBlur}from"../display/focus.js";import{maybeUpdateLineNumberWidth}from"../display/line_numbers.js";import{endOperation,operation,startOperation}from"../display/operations.js";import{initScrollbars}from"../display/scrollbars.js";import{onScrollWheel}from"../display/scroll_events.js";import{setScrollLeft,updateScrollTop}from"../display/scrolling.js";import{clipPos,Pos}from"../line/pos.js";import{posFromMouse}from"../measurement/position_measurement.js";import{eventInWidget}from"../measurement/widgets.js";import Doc from"../model/Doc.js";import{attachDoc}from"../model/document_data.js";import{Range}from"../model/selection.js";import{extendSelection}from"../model/selection_updates.js";import{ie,ie_version,mobile,webkit}from"../util/browser.js";import{e_preventDefault,e_stop,on,signal,signalDOMEvent}from"../util/event.js";import{copyObj,Delayed}from"../util/misc.js";import{clearDragCursor,onDragOver,onDragStart,onDrop}from"./drop_events.js";import{ensureGlobalHandlers}from"./global_events.js";import{onKeyDown,onKeyPress,onKeyUp}from"./key_events.js";import{clickInGutter,onContextMenu,onMouseDown}from"./mouse_events.js";import{themeChanged}from"./utils.js";import{defaults,optionHandlers,Init}from"./options.js";export function CodeMirror(e,o){if(!(this instanceof CodeMirror))return new CodeMirror(e,o);this.options=o=o?copyObj(o):{},copyObj(defaults,o,!1);let t=o.value;"string"==typeof t?t=new Doc(t,o.mode,null,o.lineSeparator,o.direction):o.mode&&(t.modeOption=o.mode),this.doc=t;let r=new CodeMirror.inputStyles[o.inputStyle](this),n=this.display=new Display(e,t,r,o);n.wrapper.CodeMirror=this,themeChanged(this),o.lineWrapping&&(this.display.wrapper.className+=" CodeMirror-wrap"),initScrollbars(this),this.state={keyMaps:[],overlays:[],modeGen:0,overwrite:!1,delayingBlurEvent:!1,focused:!1,suppressEdits:!1,pasteIncoming:-1,cutIncoming:-1,selectingText:!1,draggingText:!1,highlight:new Delayed,keySeq:null,specialChars:null},o.autofocus&&!mobile&&n.input.focus(),ie&&ie_version<11&&setTimeout(()=>this.display.input.reset(!0),20),registerEventHandlers(this),ensureGlobalHandlers(),startOperation(this),this.curOp.forceUpdate=!0,attachDoc(this,t),o.autofocus&&!mobile||this.hasFocus()?setTimeout(()=>{this.hasFocus()&&!this.state.focused&&onFocus(this)},20):onBlur(this);for(let e in optionHandlers)optionHandlers.hasOwnProperty(e)&&optionHandlers[e](this,o[e],Init);maybeUpdateLineNumberWidth(this),o.finishInit&&o.finishInit(this);for(let e=0;e<initHooks.length;++e)initHooks[e](this);endOperation(this),webkit&&o.lineWrapping&&"optimizelegibility"==getComputedStyle(n.lineDiv).textRendering&&(n.lineDiv.style.textRendering="auto")};CodeMirror.defaults=defaults,CodeMirror.optionHandlers=optionHandlers;export default CodeMirror;let initHooks=[];CodeMirror.defineInitHook=(e=>initHooks.push(e));